/*
UserGrpcModel.proto is used to create the user model for the gRPC service.
 */
syntax = "proto3";

import 'Common.proto';
option java_multiple_files = true;
option java_package = "via.sdj3.sep_t3.protobuf";
//Service definition

message UserCreationGrpcDto
{
  string username = 1;
  string password = 2;
  string role=3;
  string email = 4;
  string name=5;
  string address = 6;
  string phoneNumber = 7;
}

//we store the date as an integer, which is the seconds passed since Unix Epoch
message UserReadGrpcDTO
{
  int32 id=1;
  string username=2;
  string role=3;
  string name=4;
  string email=5;
  string phoneNumber=6;
  string address=7;
  int32 rating=8;
  int32 registrationDate=9;
  int32 lastSeenDate=10;
}
message PasswordUpdateGrpcDTO
{
  int32 id=1;
  string newPassword=2;
}
message UserUpdateGrpcDTO
{
  int32 id=1;
  string username=2;
  string role=3;
  string name=4;
  string email=5;
  string phoneNumber=6;
  string address=7;
}

message AllUsers
{
  repeated UserReadGrpcDTO users=1;
}

message LoginCredentials
{
  string username=1;
  string password=2;
}

service sepService
{
  rpc getAllUsers(Empty) returns (AllUsers);
  rpc createUser(UserCreationGrpcDto) returns(UserReadGrpcDTO);
  rpc getUserById(GenericMessage)returns(UserReadGrpcDTO);
  // Generic message means Id here
  rpc validateLogin(LoginCredentials) returns(UserReadGrpcDTO);
  rpc deleteById(GenericMessage)returns(GenericMessage);

  rpc updatePassword(PasswordUpdateGrpcDTO)returns(GenericMessage);
  rpc updateUserInformation(UserUpdateGrpcDTO)returns(UserReadGrpcDTO);
}